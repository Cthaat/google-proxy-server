# 生产环境Docker Compose配置
version: '3.8'

services:
  google-proxy:
    build: 
      context: .
      dockerfile: Dockerfile.prod
    container_name: google-maps-proxy-prod    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=production
      - GOOGLE_MAPS_API_KEY=${GOOGLE_MAPS_API_KEY}
      - PORT=3002
      - CORS_ORIGIN=${CORS_ORIGIN:-"*"}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - RATE_LIMIT_WINDOW=${RATE_LIMIT_WINDOW:-900000}
      - RATE_LIMIT_MAX=${RATE_LIMIT_MAX:-100}
      - API_PASSWORD=${API_PASSWORD:-"google-maps-proxy-2024"}
    volumes:
      - ./logs:/app/logs
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 64M
    networks:
      - google-proxy-network
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=100m

  # Nginx反向代理 (可选)
  nginx:
    image: nginx:alpine
    container_name: google-proxy-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - google-proxy
    restart: unless-stopped
    networks:
      - google-proxy-network

networks:
  google-proxy-network:
    driver: bridge
